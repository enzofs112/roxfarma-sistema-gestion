# ============================================================================
# CONFIGURACIÓN DEL SISTEMA ROXFARMA
# Proyecto Integrador de Sistemas - UTP
# ============================================================================

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DEL SERVIDOR
# ----------------------------------------------------------------------------
server.port=8080
server.servlet.context-path=/

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE BASE DE DATOS MYSQL
# ----------------------------------------------------------------------------
# URL de conexión a MySQL
# Asegúrate de crear la base de datos 'roxfarma_db' antes de ejecutar
spring.datasource.url=jdbc:mysql://localhost:3306/roxfarma_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=

# Driver de MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Pool de conexiones
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE JPA/HIBERNATE
# ----------------------------------------------------------------------------
# Estrategia de generación de esquema
# update: Actualiza el esquema sin eliminar datos existentes
# create: Crea el esquema desde cero (elimina datos)
# validate: Solo valida que el esquema coincida con las entidades
spring.jpa.hibernate.ddl-auto=update

# Mostrar SQL en consola (útil para desarrollo)
spring.jpa.show-sql=true

# Formatear SQL para mejor legibilidad
spring.jpa.properties.hibernate.format_sql=true

# Dialecto de MySQL 8
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Habilitar estadísticas de Hibernate (opcional, para debugging)
spring.jpa.properties.hibernate.generate_statistics=false

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE JWT (JSON Web Token)
# ----------------------------------------------------------------------------
# Clave secreta para firmar tokens JWT
# IMPORTANTE: En producción, usar una clave más segura y almacenarla en variables de entorno
jwt.secret=roxfarma_secret_key_2024_proyecto_integrador_utp_muy_segura_y_larga_para_jwt

# Tiempo de expiración del token en milisegundos
# 86400000 ms = 24 horas
jwt.expiration=86400000

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE LOGGING
# ----------------------------------------------------------------------------
# Nivel de logging para el paquete de RoxFarma
logging.level.com.utp.roxfarma=DEBUG

# Nivel de logging para Spring Security (útil para debugging de autenticación)
logging.level.org.springframework.security=INFO

# Nivel de logging para Hibernate SQL
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Archivo de log
logging.file.name=logs/roxfarma.log

# Patrón de logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE ARCHIVOS MULTIPART (para futura carga de archivos)
# ----------------------------------------------------------------------------
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE JACKSON (Serialización JSON)
# ----------------------------------------------------------------------------
# Formato de fechas en JSON
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=America/Lima

# No incluir propiedades null en JSON
spring.jackson.default-property-inclusion=non_null

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE CORS (Cross-Origin Resource Sharing)
# ----------------------------------------------------------------------------
# Permitir peticiones desde el frontend en desarrollo
# En producción, configurar dominios específicos
cors.allowed-origins=http://localhost:3000,http://localhost:5173

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE ACTUATOR (Monitoreo - Opcional)
# ----------------------------------------------------------------------------
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
